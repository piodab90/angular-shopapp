{"ast":null,"code":"import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n  flush(action) {\n    this.active = true;\n    this.scheduled = undefined;\n    const {\n      actions\n    } = this;\n    let error;\n    let index = -1;\n    let count = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/scheduler/AsapScheduler.ts"],"names":[],"mappings":"AACA,SAAS,cAAT,QAA+B,kBAA/B;AAEA,OAAM,MAAO,aAAP,SAA6B,cAA7B,CAA2C;AACxC,EAAA,KAAK,CAAC,MAAD,EAA0B;AAEpC,SAAK,MAAL,GAAc,IAAd;AACA,SAAK,SAAL,GAAiB,SAAjB;AAEA,UAAM;AAAC,MAAA;AAAD,QAAY,IAAlB;AACA,QAAI,KAAJ;AACA,QAAI,KAAK,GAAW,CAAC,CAArB;AACA,QAAI,KAAK,GAAW,OAAO,CAAC,MAA5B;AACA,IAAA,MAAM,GAAG,MAAM,IAAI,OAAO,CAAC,KAAR,EAAnB;;AAEA,OAAG;AACD,UAAI,KAAK,GAAG,MAAM,CAAC,OAAP,CAAe,MAAM,CAAC,KAAtB,EAA6B,MAAM,CAAC,KAApC,CAAZ,EAAwD;AACtD;AACD;AACF,KAJD,QAIS,EAAE,KAAF,GAAU,KAAV,KAAoB,MAAM,GAAG,OAAO,CAAC,KAAR,EAA7B,CAJT;;AAMA,SAAK,MAAL,GAAc,KAAd;;AAEA,QAAI,KAAJ,EAAW;AACT,aAAO,EAAE,KAAF,GAAU,KAAV,KAAoB,MAAM,GAAG,OAAO,CAAC,KAAR,EAA7B,CAAP,EAAsD;AACpD,QAAA,MAAM,CAAC,WAAP;AACD;;AACD,YAAM,KAAN;AACD;AACF;;AA1B8C","sourcesContent":["import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsapScheduler.js.map"]},"metadata":{},"sourceType":"module"}