{"ast":null,"code":"import { Component } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction LoginComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r53 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"submit\", function LoginComponent_form_1_Template_form_submit_0_listener($event) {\n      i0.ɵɵrestoreView(_r53);\n      const ctx_r52 = i0.ɵɵnextContext();\n      return ctx_r52.loginUser($event);\n    });\n    i0.ɵɵelement(1, \"input\", 4);\n    i0.ɵɵelement(2, \"input\", 5);\n    i0.ɵɵelement(3, \"input\", 6);\n    i0.ɵɵelementEnd();\n  }\n}\n\nvar I18N_0;\n\nif (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n  const MSG_EXTERNAL_logout$$SRC_APP_LOGIN_LOGIN_COMPONENT_TS__1 = goog.getMsg(\"Logout\");\n  I18N_0 = MSG_EXTERNAL_logout$$SRC_APP_LOGIN_LOGIN_COMPONENT_TS__1;\n} else {\n  I18N_0 = \"Wyloguj\";\n}\n\nfunction LoginComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r55 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function LoginComponent_button_2_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r54 = i0.ɵɵnextContext();\n      return ctx_r54.logout();\n    });\n    i0.ɵɵi18n(1, I18N_0);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class LoginComponent {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n\n  ngOnInit() {}\n\n  loginUser(event) {\n    event.preventDefault();\n    const target = event.target;\n    const username = target.querySelector(\"#username\").value;\n    const password = target.querySelector(\"#password\").value;\n    let result = this.auth.login(username, password);\n\n    if (result === true) {\n      this.router.navigate(['/admin']);\n    } else {\n      window.alert(\"Invalid credentials!\");\n    }\n  }\n\n  logout() {\n    let result = this.auth.logout();\n    this.router.navigate(['/']);\n  }\n\n  get isLoggedIn() {\n    return this.auth.isLoggedIn;\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nLoginComponent.ɵcmp = i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[2, \"float\", \"right\"], [3, \"submit\", 4, \"ngIf\"], [3, \"click\", 4, \"ngIf\"], [3, \"submit\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"id\", \"username\", \"i18-placeholder\", \"@@username\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"id\", \"password\", \"i18-placeholder\", \"@@password\"], [\"type\", \"submit\", \"value\", \"Submit\", \"i18-value\", \"@@submit\"], [3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, LoginComponent_form_1_Template, 4, 0, \"form\", 1);\n      i0.ɵɵtemplate(2, LoginComponent_button_2_Template, 2, 0, \"button\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n    }\n  },\n  directives: [i3.NgIf, i4.ɵangular_packages_forms_forms_y, i4.NgControlStatusGroup, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"]\n});\n/*@__PURE__*/\n\n(function () {\n  i0.ɵsetClassMetadata(LoginComponent, [{\n    type: Component,\n    args: [{\n      selector: 'app-login',\n      templateUrl: './login.component.html',\n      styleUrls: ['./login.component.css']\n    }]\n  }], function () {\n    return [{\n      type: i1.AuthService\n    }, {\n      type: i2.Router\n    }];\n  }, null);\n})();","map":{"version":3,"sources":["C:\\WORK\\shop-app\\src\\app\\login\\login.component.ts","C:\\WORK\\shop-app\\src\\app\\login\\login.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  loginUser(event) {\n    event.preventDefault();\n    const target = event.target;\n    const username = target.querySelector(\"#username\").value;\n    const password = target.querySelector(\"#password\").value;\n\n    let result = this.auth.login(username, password);\n    if (result === true) {\n      this.router.navigate(['/admin']);\n    } else {\n      window.alert(\"Invalid credentials!\");\n    }\n  }\n\n  logout() {\n    let result = this.auth.logout();\n    this.router.navigate(['/']);\n  }\n\n  get isLoggedIn() {\n    return this.auth.isLoggedIn;\n  }\n}\n","<div style=\"float:right;\">\n    <form *ngIf=\"!isLoggedIn\" (submit)=\"loginUser($event)\">\n        <input type=\"text\" placeholder=\"Username\" id=\"username\" i18-placeholder=\"@@username\">\n        <input type=\"password\" placeholder=\"Password\" id=\"password\" i18-placeholder=\"@@password\">\n        <input type=\"submit\" value=\"Submit\" i18-value=\"@@submit\">\n    </form>\n    <button *ngIf=\"isLoggedIn\" (click)=\"logout()\" i18n=\"@@logout\">Logout</button>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}