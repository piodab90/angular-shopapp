{"ast":null,"code":"import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n  return source => {\n    let project;\n\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n\n    const observables = args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator {\n  constructor(observables, project) {\n    this.observables = observables;\n    this.project = project;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n\n}\n\nclass WithLatestFromSubscriber extends OuterSubscriber {\n  constructor(destination, observables, project) {\n    super(destination);\n    this.observables = observables;\n    this.project = project;\n    this.toRespond = [];\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult(this, observable, observable, i));\n    }\n  }\n\n  notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {}\n\n  _next(value) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  _tryProject(args) {\n    let result;\n\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/operators/withLatestFrom.ts"],"names":[],"mappings":"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","sourcesContent":["import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, observable, i));\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=withLatestFrom.js.map"]},"metadata":{},"sourceType":"module"}