{"ast":null,"code":"import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n  constructor(SchedulerAction, now = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n    this.actions = [];\n    this.active = false;\n    this.scheduled = undefined;\n  }\n\n  schedule(work, delay = 0, state) {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  flush(action) {\n    const {\n      actions\n    } = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift());\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/scheduler/AsyncScheduler.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,cAA1B;AAMA,OAAM,MAAO,cAAP,SAA8B,SAA9B,CAAuC;AAmB3C,EAAA,WAAA,CAAY,eAAZ,EACY,GAAA,GAAoB,SAAS,CAAC,GAD1C,EAC6C;AAC3C,UAAM,eAAN,EAAuB,MAAK;AAC1B,UAAI,cAAc,CAAC,QAAf,IAA2B,cAAc,CAAC,QAAf,KAA4B,IAA3D,EAAiE;AAC/D,eAAO,cAAc,CAAC,QAAf,CAAwB,GAAxB,EAAP;AACD,OAFD,MAEO;AACL,eAAO,GAAG,EAAV;AACD;AACF,KAND;AAnBK,SAAA,OAAA,GAAmC,EAAnC;AAOA,SAAA,MAAA,GAAkB,KAAlB;AAQA,SAAA,SAAA,GAAiB,SAAjB;AAWN;;AAEM,EAAA,QAAQ,CAAI,IAAJ,EAAyD,KAAA,GAAgB,CAAzE,EAA4E,KAA5E,EAAqF;AAClG,QAAI,cAAc,CAAC,QAAf,IAA2B,cAAc,CAAC,QAAf,KAA4B,IAA3D,EAAiE;AAC/D,aAAO,cAAc,CAAC,QAAf,CAAwB,QAAxB,CAAiC,IAAjC,EAAuC,KAAvC,EAA8C,KAA9C,CAAP;AACD,KAFD,MAEO;AACL,aAAO,MAAM,QAAN,CAAe,IAAf,EAAqB,KAArB,EAA4B,KAA5B,CAAP;AACD;AACF;;AAEM,EAAA,KAAK,CAAC,MAAD,EAAyB;AAEnC,UAAM;AAAC,MAAA;AAAD,QAAY,IAAlB;;AAEA,QAAI,KAAK,MAAT,EAAiB;AACf,MAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACA;AACD;;AAED,QAAI,KAAJ;AACA,SAAK,MAAL,GAAc,IAAd;;AAEA,OAAG;AACD,UAAI,KAAK,GAAG,MAAM,CAAC,OAAP,CAAe,MAAM,CAAC,KAAtB,EAA6B,MAAM,CAAC,KAApC,CAAZ,EAAwD;AACtD;AACD;AACF,KAJD,QAIS,MAAM,GAAG,OAAO,CAAC,KAAR,EAJlB;;AAMA,SAAK,MAAL,GAAc,KAAd;;AAEA,QAAI,KAAJ,EAAW;AACT,aAAO,MAAM,GAAG,OAAO,CAAC,KAAR,EAAhB,EAAiC;AAC/B,QAAA,MAAM,CAAC,WAAP;AACD;;AACD,YAAM,KAAN;AACD;AACF;;AAhE0C","sourcesContent":["import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, () => {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        });\n        this.actions = [];\n        this.active = false;\n        this.scheduled = undefined;\n    }\n    schedule(work, delay = 0, state) {\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return super.schedule(work, delay, state);\n        }\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsyncScheduler.js.map"]},"metadata":{},"sourceType":"module"}