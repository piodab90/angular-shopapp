{"ast":null,"code":"import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function exhaust() {\n  return source => source.lift(new SwitchFirstOperator());\n}\n\nclass SwitchFirstOperator {\n  call(subscriber, source) {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n\n}\n\nclass SwitchFirstSubscriber extends OuterSubscriber {\n  constructor(destination) {\n    super(destination);\n    this.hasCompleted = false;\n    this.hasSubscription = false;\n  }\n\n  _next(value) {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  _complete() {\n    this.hasCompleted = true;\n\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub) {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/operators/exhaust.ts"],"names":[],"mappings":"AAIA,SAAS,eAAT,QAAgC,oBAAhC;AACA,SAAS,iBAAT,QAAkC,2BAAlC;AAkDA,OAAM,SAAU,OAAV,GAAiB;AACrB,SAAQ,MAAD,IAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,mBAAJ,EAAZ,CAAlC;AACD;;AAED,MAAM,mBAAN,CAAyB;AACvB,EAAA,IAAI,CAAC,UAAD,EAA4B,MAA5B,EAAuC;AACzC,WAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,qBAAJ,CAA0B,UAA1B,CAAjB,CAAP;AACD;;AAHsB;;AAWzB,MAAM,qBAAN,SAAuC,eAAvC,CAA4D;AAI1D,EAAA,WAAA,CAAY,WAAZ,EAAsC;AACpC,UAAM,WAAN;AAJM,SAAA,YAAA,GAAwB,KAAxB;AACA,SAAA,eAAA,GAA2B,KAA3B;AAIP;;AAES,EAAA,KAAK,CAAC,KAAD,EAAS;AACtB,QAAI,CAAC,KAAK,eAAV,EAA2B;AACzB,WAAK,eAAL,GAAuB,IAAvB;AACA,WAAK,GAAL,CAAS,iBAAiB,CAAC,IAAD,EAAO,KAAP,CAA1B;AACD;AACF;;AAES,EAAA,SAAS,GAAA;AACjB,SAAK,YAAL,GAAoB,IAApB;;AACA,QAAI,CAAC,KAAK,eAAV,EAA2B;AACzB,WAAK,WAAL,CAAiB,QAAjB;AACD;AACF;;AAED,EAAA,cAAc,CAAC,QAAD,EAAuB;AACnC,SAAK,MAAL,CAAY,QAAZ;AACA,SAAK,eAAL,GAAuB,KAAvB;;AACA,QAAI,KAAK,YAAT,EAAuB;AACrB,WAAK,WAAL,CAAiB,QAAjB;AACD;AACF;;AA5ByD","sourcesContent":["import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function exhaust() {\n    return (source) => source.lift(new SwitchFirstOperator());\n}\nclass SwitchFirstOperator {\n    call(subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    }\n}\nclass SwitchFirstSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasCompleted = false;\n        this.hasSubscription = false;\n    }\n    _next(value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, value));\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    }\n    notifyComplete(innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=exhaust.js.map"]},"metadata":{},"sourceType":"module"}