{"ast":null,"code":"import { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n  return function bufferToggleOperatorFunction(source) {\n    return source.lift(new BufferToggleOperator(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator {\n  constructor(openings, closingSelector) {\n    this.openings = openings;\n    this.closingSelector = closingSelector;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n\n}\n\nclass BufferToggleSubscriber extends OuterSubscriber {\n  constructor(destination, openings, closingSelector) {\n    super(destination);\n    this.openings = openings;\n    this.closingSelector = closingSelector;\n    this.contexts = [];\n    this.add(subscribeToResult(this, openings));\n  }\n\n  _next(value) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  _error(err) {\n    const contexts = this.contexts;\n\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n\n    this.contexts = null;\n\n    super._error(err);\n  }\n\n  _complete() {\n    const contexts = this.contexts;\n\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n\n    this.contexts = null;\n\n    super._complete();\n  }\n\n  notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub) {\n    this.closeBuffer(innerSub.context);\n  }\n\n  openBuffer(value) {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  closeBuffer(context) {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const {\n        buffer,\n        subscription\n      } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  trySubscribe(closingNotifier) {\n    const contexts = this.contexts;\n    const buffer = [];\n    const subscription = new Subscription();\n    const context = {\n      buffer,\n      subscription\n    };\n    contexts.push(context);\n    const innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      innerSubscription.context = context;\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/operators/bufferToggle.ts"],"names":[],"mappings":"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","sourcesContent":["import { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nclass BufferToggleOperator {\n    constructor(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n}\nclass BufferToggleSubscriber extends OuterSubscriber {\n    constructor(destination, openings, closingSelector) {\n        super(destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult(this, openings));\n    }\n    _next(value) {\n        const contexts = this.contexts;\n        const len = contexts.length;\n        for (let i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    }\n    _error(err) {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._error(err);\n    }\n    _complete() {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._complete();\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    }\n    notifyComplete(innerSub) {\n        this.closeBuffer(innerSub.context);\n    }\n    openBuffer(value) {\n        try {\n            const closingSelector = this.closingSelector;\n            const closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    }\n    closeBuffer(context) {\n        const contexts = this.contexts;\n        if (contexts && context) {\n            const { buffer, subscription } = context;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    }\n    trySubscribe(closingNotifier) {\n        const contexts = this.contexts;\n        const buffer = [];\n        const subscription = new Subscription();\n        const context = { buffer, subscription };\n        contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    }\n}\n//# sourceMappingURL=bufferToggle.js.map"]},"metadata":{},"sourceType":"module"}