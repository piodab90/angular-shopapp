{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\nexport function tap(nextOrObserver, error, complete) {\n  return function tapOperatorFunction(source) {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator {\n  constructor(nextOrObserver, error, complete) {\n    this.nextOrObserver = nextOrObserver;\n    this.error = error;\n    this.complete = complete;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n\n}\n\nclass TapSubscriber extends Subscriber {\n  constructor(destination, observerOrNext, error, complete) {\n    super(destination);\n    this._tapNext = noop;\n    this._tapError = noop;\n    this._tapComplete = noop;\n    this._tapError = error || noop;\n    this._tapComplete = complete || noop;\n\n    if (isFunction(observerOrNext)) {\n      this._context = this;\n      this._tapNext = observerOrNext;\n    } else if (observerOrNext) {\n      this._context = observerOrNext;\n      this._tapNext = observerOrNext.next || noop;\n      this._tapError = observerOrNext.error || noop;\n      this._tapComplete = observerOrNext.complete || noop;\n    }\n  }\n\n  _next(value) {\n    try {\n      this._tapNext.call(this._context, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(value);\n  }\n\n  _error(err) {\n    try {\n      this._tapError.call(this._context, err);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.error(err);\n  }\n\n  _complete() {\n    try {\n      this._tapComplete.call(this._context);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    return this.destination.complete();\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/operators/tap.ts"],"names":[],"mappings":"AACA,SAAS,UAAT,QAA2B,eAA3B;AAGA,SAAS,IAAT,QAAqB,cAArB;AACA,SAAS,UAAT,QAA2B,oBAA3B;AA6DA,OAAM,SAAU,GAAV,CAAiB,cAAjB,EACiB,KADjB,EAEiB,QAFjB,EAEsC;AAC1C,SAAO,SAAS,mBAAT,CAA6B,MAA7B,EAAkD;AACvD,WAAO,MAAM,CAAC,IAAP,CAAY,IAAI,UAAJ,CAAe,cAAf,EAA+B,KAA/B,EAAsC,QAAtC,CAAZ,CAAP;AACD,GAFD;AAGD;;AAED,MAAM,UAAN,CAAgB;AACd,EAAA,WAAA,CAAoB,cAApB,EACoB,KADpB,EAEoB,QAFpB,EAEyC;AAFrB,SAAA,cAAA,GAAA,cAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACA,SAAA,QAAA,GAAA,QAAA;AACnB;;AACD,EAAA,IAAI,CAAC,UAAD,EAA4B,MAA5B,EAAuC;AACzC,WAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,aAAJ,CAAkB,UAAlB,EAA8B,KAAK,cAAnC,EAAmD,KAAK,KAAxD,EAA+D,KAAK,QAApE,CAAjB,CAAP;AACD;;AAPa;;AAgBhB,MAAM,aAAN,SAA+B,UAA/B,CAA4C;AAS1C,EAAA,WAAA,CAAY,WAAZ,EACY,cADZ,EAEY,KAFZ,EAGY,QAHZ,EAGiC;AAC7B,UAAM,WAAN;AAVI,SAAA,QAAA,GAAiC,IAAjC;AAEA,SAAA,SAAA,GAAkC,IAAlC;AAEA,SAAA,YAAA,GAA6B,IAA7B;AAOJ,SAAK,SAAL,GAAiB,KAAK,IAAI,IAA1B;AACA,SAAK,YAAL,GAAoB,QAAQ,IAAI,IAAhC;;AACA,QAAI,UAAU,CAAC,cAAD,CAAd,EAAgC;AAC9B,WAAK,QAAL,GAAgB,IAAhB;AACA,WAAK,QAAL,GAAgB,cAAhB;AACD,KAHD,MAGO,IAAI,cAAJ,EAAoB;AACzB,WAAK,QAAL,GAAgB,cAAhB;AACA,WAAK,QAAL,GAAgB,cAAc,CAAC,IAAf,IAAuB,IAAvC;AACA,WAAK,SAAL,GAAiB,cAAc,CAAC,KAAf,IAAwB,IAAzC;AACA,WAAK,YAAL,GAAoB,cAAc,CAAC,QAAf,IAA2B,IAA/C;AACD;AACF;;AAEH,EAAA,KAAK,CAAC,KAAD,EAAS;AACZ,QAAI;AACF,WAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,QAAxB,EAAkC,KAAlC;AACD,KAFD,CAEE,OAAO,GAAP,EAAY;AACZ,WAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACA;AACD;;AACD,SAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAtB;AACD;;AAED,EAAA,MAAM,CAAC,GAAD,EAAS;AACb,QAAI;AACF,WAAK,SAAL,CAAe,IAAf,CAAoB,KAAK,QAAzB,EAAmC,GAAnC;AACD,KAFD,CAEE,OAAO,GAAP,EAAY;AACZ,WAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACA;AACD;;AACD,SAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACD;;AAED,EAAA,SAAS,GAAA;AACP,QAAI;AACF,WAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAK,QAA5B;AACD,KAFD,CAEE,OAAO,GAAP,EAAY;AACZ,WAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACA;AACD;;AACD,WAAO,KAAK,WAAL,CAAiB,QAAjB,EAAP;AACD;;AAvDyC","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\nexport function tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nclass DoOperator {\n    constructor(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    }\n}\nclass TapSubscriber extends Subscriber {\n    constructor(destination, observerOrNext, error, complete) {\n        super(destination);\n        this._tapNext = noop;\n        this._tapError = noop;\n        this._tapComplete = noop;\n        this._tapError = error || noop;\n        this._tapComplete = complete || noop;\n        if (isFunction(observerOrNext)) {\n            this._context = this;\n            this._tapNext = observerOrNext;\n        }\n        else if (observerOrNext) {\n            this._context = observerOrNext;\n            this._tapNext = observerOrNext.next || noop;\n            this._tapError = observerOrNext.error || noop;\n            this._tapComplete = observerOrNext.complete || noop;\n        }\n    }\n    _next(value) {\n        try {\n            this._tapNext.call(this._context, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(value);\n    }\n    _error(err) {\n        try {\n            this._tapError.call(this._context, err);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        try {\n            this._tapComplete.call(this._context);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        return this.destination.complete();\n    }\n}\n//# sourceMappingURL=tap.js.map"]},"metadata":{},"sourceType":"module"}