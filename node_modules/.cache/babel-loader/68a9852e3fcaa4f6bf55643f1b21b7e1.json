{"ast":null,"code":"import { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class AuthGuard {\n  constructor(auth) {\n    this.auth = auth;\n  }\n\n  canActivate(next, state) {\n    return this.auth.isLoggedIn;\n  }\n\n}\n\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService));\n};\n\nAuthGuard.ɵprov = i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\n/*@__PURE__*/\n\n(function () {\n  i0.ɵsetClassMetadata(AuthGuard, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.AuthService\n    }];\n  }, null);\n})();","map":{"version":3,"sources":["C:\\WORK\\shop-app\\src\\app\\auth.guard.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;;;AAQA,OAAM,MAAO,SAAP,CAAgB;AAEpB,EAAA,WAAA,CAAoB,IAApB,EAAqC;AAAjB,SAAA,IAAA,GAAA,IAAA;AAEnB;;AAED,EAAA,WAAW,CACT,IADS,EAET,KAFS,EAEiB;AAC1B,WAAO,KAAK,IAAL,CAAU,UAAjB;AACD;;AAVmB;;;mBAAT,S,EAAS,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,WAAA,C;AAAA,C;;;SAAT,S;AAAS,EAAA,OAAA,EAAT,SAAS,CAAA,I;AAAA,EAAA,UAAA,EAFR;;;;;uBAED,S,EAAS,CAAA;UAHrB,UAGqB;WAHV;AACV,MAAA,UAAU,EAAE;AADF,K;AAGU,GAAA,C","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService) {\n    \n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.auth.isLoggedIn;\n  }\n  \n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}