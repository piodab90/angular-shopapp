{"ast":null,"code":"import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function buffer(closingNotifier) {\n  return function bufferOperatorFunction(source) {\n    return source.lift(new BufferOperator(closingNotifier));\n  };\n}\n\nclass BufferOperator {\n  constructor(closingNotifier) {\n    this.closingNotifier = closingNotifier;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n\n}\n\nclass BufferSubscriber extends OuterSubscriber {\n  constructor(destination, closingNotifier) {\n    super(destination);\n    this.buffer = [];\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  _next(value) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/operators/buffer.ts"],"names":[],"mappings":"AAGA,SAAS,eAAT,QAAgC,oBAAhC;AAEA,SAAS,iBAAT,QAAkC,2BAAlC;AA2CA,OAAM,SAAU,MAAV,CAAoB,eAApB,EAAoD;AACxD,SAAO,SAAS,sBAAT,CAAgC,MAAhC,EAAqD;AAC1D,WAAO,MAAM,CAAC,IAAP,CAAY,IAAI,cAAJ,CAAsB,eAAtB,CAAZ,CAAP;AACD,GAFD;AAGD;;AAED,MAAM,cAAN,CAAoB;AAElB,EAAA,WAAA,CAAoB,eAApB,EAAoD;AAAhC,SAAA,eAAA,GAAA,eAAA;AACnB;;AAED,EAAA,IAAI,CAAC,UAAD,EAA8B,MAA9B,EAAyC;AAC3C,WAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,gBAAJ,CAAqB,UAArB,EAAiC,KAAK,eAAtC,CAAjB,CAAP;AACD;;AAPiB;;AAepB,MAAM,gBAAN,SAAkC,eAAlC,CAAyD;AAGvD,EAAA,WAAA,CAAY,WAAZ,EAA0C,eAA1C,EAA0E;AACxE,UAAM,WAAN;AAHM,SAAA,MAAA,GAAc,EAAd;AAIN,SAAK,GAAL,CAAS,iBAAiB,CAAC,IAAD,EAAO,eAAP,CAA1B;AACD;;AAES,EAAA,KAAK,CAAC,KAAD,EAAS;AACtB,SAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB;AACD;;AAED,EAAA,UAAU,CAAC,UAAD,EAAgB,UAAhB,EACC,UADD,EACqB,UADrB,EAEC,QAFD,EAEkC;AAC1C,UAAM,MAAM,GAAG,KAAK,MAApB;AACA,SAAK,MAAL,GAAc,EAAd;AACA,SAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAtB;AACD;;AAlBsD","sourcesContent":["import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function buffer(closingNotifier) {\n    return function bufferOperatorFunction(source) {\n        return source.lift(new BufferOperator(closingNotifier));\n    };\n}\nclass BufferOperator {\n    constructor(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    }\n}\nclass BufferSubscriber extends OuterSubscriber {\n    constructor(destination, closingNotifier) {\n        super(destination);\n        this.buffer = [];\n        this.add(subscribeToResult(this, closingNotifier));\n    }\n    _next(value) {\n        this.buffer.push(value);\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        const buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    }\n}\n//# sourceMappingURL=buffer.js.map"]},"metadata":{},"sourceType":"module"}