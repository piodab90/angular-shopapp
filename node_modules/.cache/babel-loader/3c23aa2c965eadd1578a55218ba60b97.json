{"ast":null,"code":"import { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport class SubscribeOnObservable extends Observable {\n  constructor(source, delayTime = 0, scheduler = asap) {\n    super();\n    this.source = source;\n    this.delayTime = delayTime;\n    this.scheduler = scheduler;\n\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  static create(source, delay = 0, scheduler = asap) {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  static dispatch(arg) {\n    const {\n      source,\n      subscriber\n    } = arg;\n    return this.add(source.subscribe(subscriber));\n  }\n\n  _subscribe(subscriber) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n      source,\n      subscriber\n    });\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/observable/SubscribeOnObservable.ts"],"names":[],"mappings":"AAGA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,IAAT,QAAqB,mBAArB;AACA,SAAS,SAAT,QAA0B,mBAA1B;AAYA,OAAM,MAAO,qBAAP,SAAwC,UAAxC,CAAqD;AAYzD,EAAA,WAAA,CAAmB,MAAnB,EACoB,SAAA,GAAoB,CADxC,EAEoB,SAAA,GAA2B,IAF/C,EAEmD;AACjD;AAHiB,SAAA,MAAA,GAAA,MAAA;AACC,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,SAAA,GAAA,SAAA;;AAElB,QAAI,CAAC,SAAS,CAAC,SAAD,CAAV,IAAyB,SAAS,GAAG,CAAzC,EAA4C;AAC1C,WAAK,SAAL,GAAiB,CAAjB;AACD;;AACD,QAAI,CAAC,SAAD,IAAc,OAAO,SAAS,CAAC,QAAjB,KAA8B,UAAhD,EAA4D;AAC1D,WAAK,SAAL,GAAiB,IAAjB;AACD;AACF;;AApBD,SAAO,MAAP,CAAiB,MAAjB,EAAwC,KAAA,GAAgB,CAAxD,EAA2D,SAAA,GAA2B,IAAtF,EAA0F;AACxF,WAAO,IAAI,qBAAJ,CAA0B,MAA1B,EAAkC,KAAlC,EAAyC,SAAzC,CAAP;AACD;;AAGD,SAAO,QAAP,CAA6C,GAA7C,EAAgE;AAC9D,UAAM;AAAE,MAAA,MAAF;AAAU,MAAA;AAAV,QAAyB,GAA/B;AACA,WAAO,KAAK,GAAL,CAAS,MAAM,CAAC,SAAP,CAAiB,UAAjB,CAAT,CAAP;AACD;;AAeD,EAAA,UAAU,CAAC,UAAD,EAA0B;AAClC,UAAM,KAAK,GAAG,KAAK,SAAnB;AACA,UAAM,MAAM,GAAG,KAAK,MAApB;AACA,UAAM,SAAS,GAAG,KAAK,SAAvB;AAEA,WAAO,SAAS,CAAC,QAAV,CAAqC,qBAAqB,CAAC,QAA3D,EAAqE,KAArE,EAA4E;AACjF,MAAA,MADiF;AACzE,MAAA;AADyE,KAA5E,CAAP;AAGD;;AAjCwD","sourcesContent":["import { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport class SubscribeOnObservable extends Observable {\n    constructor(source, delayTime = 0, scheduler = asap) {\n        super();\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap;\n        }\n    }\n    static create(source, delay = 0, scheduler = asap) {\n        return new SubscribeOnObservable(source, delay, scheduler);\n    }\n    static dispatch(arg) {\n        const { source, subscriber } = arg;\n        return this.add(source.subscribe(subscriber));\n    }\n    _subscribe(subscriber) {\n        const delay = this.delayTime;\n        const source = this.source;\n        const scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source, subscriber\n        });\n    }\n}\n//# sourceMappingURL=SubscribeOnObservable.js.map"]},"metadata":{},"sourceType":"module"}