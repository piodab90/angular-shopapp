{"ast":null,"code":"import { EmptyError } from '../util/EmptyError';\nimport { Subscriber } from '../Subscriber';\nexport function throwIfEmpty(errorFactory = defaultErrorFactory) {\n  return source => {\n    return source.lift(new ThrowIfEmptyOperator(errorFactory));\n  };\n}\n\nclass ThrowIfEmptyOperator {\n  constructor(errorFactory) {\n    this.errorFactory = errorFactory;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));\n  }\n\n}\n\nclass ThrowIfEmptySubscriber extends Subscriber {\n  constructor(destination, errorFactory) {\n    super(destination);\n    this.errorFactory = errorFactory;\n    this.hasValue = false;\n  }\n\n  _next(value) {\n    this.hasValue = true;\n    this.destination.next(value);\n  }\n\n  _complete() {\n    if (!this.hasValue) {\n      let err;\n\n      try {\n        err = this.errorFactory();\n      } catch (e) {\n        err = e;\n      }\n\n      this.destination.error(err);\n    } else {\n      return this.destination.complete();\n    }\n  }\n\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}","map":{"version":3,"sources":["../../../src/internal/operators/throwIfEmpty.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,oBAA3B;AAGA,SAAS,UAAT,QAA2B,eAA3B;AAiCA,OAAM,SAAU,YAAV,CAA2B,YAAA,GAA4B,mBAAvD,EAA0E;AAC9E,SAAQ,MAAD,IAA0B;AAC/B,WAAO,MAAM,CAAC,IAAP,CAAY,IAAI,oBAAJ,CAAyB,YAAzB,CAAZ,CAAP;AACD,GAFD;AAGD;;AAED,MAAM,oBAAN,CAA0B;AACxB,EAAA,WAAA,CAAoB,YAApB,EAA2C;AAAvB,SAAA,YAAA,GAAA,YAAA;AACnB;;AAED,EAAA,IAAI,CAAC,UAAD,EAA4B,MAA5B,EAAuC;AACzC,WAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,sBAAJ,CAA2B,UAA3B,EAAuC,KAAK,YAA5C,CAAjB,CAAP;AACD;;AANuB;;AAS1B,MAAM,sBAAN,SAAwC,UAAxC,CAAqD;AAGnD,EAAA,WAAA,CAAY,WAAZ,EAAgD,YAAhD,EAAuE;AACrE,UAAM,WAAN;AAD8C,SAAA,YAAA,GAAA,YAAA;AAFxC,SAAA,QAAA,GAAoB,KAApB;AAIP;;AAES,EAAA,KAAK,CAAC,KAAD,EAAS;AACtB,SAAK,QAAL,GAAgB,IAAhB;AACA,SAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAtB;AACD;;AAES,EAAA,SAAS,GAAA;AACjB,QAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,UAAI,GAAJ;;AACA,UAAI;AACF,QAAA,GAAG,GAAG,KAAK,YAAL,EAAN;AACD,OAFD,CAEE,OAAO,CAAP,EAAU;AACV,QAAA,GAAG,GAAG,CAAN;AACD;;AACD,WAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACD,KARD,MAQO;AACH,aAAO,KAAK,WAAL,CAAiB,QAAjB,EAAP;AACH;AACF;;AAxBkD;;AA2BrD,SAAS,mBAAT,GAA4B;AAC1B,SAAO,IAAI,UAAJ,EAAP;AACD","sourcesContent":["import { EmptyError } from '../util/EmptyError';\nimport { Subscriber } from '../Subscriber';\nexport function throwIfEmpty(errorFactory = defaultErrorFactory) {\n    return (source) => {\n        return source.lift(new ThrowIfEmptyOperator(errorFactory));\n    };\n}\nclass ThrowIfEmptyOperator {\n    constructor(errorFactory) {\n        this.errorFactory = errorFactory;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));\n    }\n}\nclass ThrowIfEmptySubscriber extends Subscriber {\n    constructor(destination, errorFactory) {\n        super(destination);\n        this.errorFactory = errorFactory;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.hasValue = true;\n        this.destination.next(value);\n    }\n    _complete() {\n        if (!this.hasValue) {\n            let err;\n            try {\n                err = this.errorFactory();\n            }\n            catch (e) {\n                err = e;\n            }\n            this.destination.error(err);\n        }\n        else {\n            return this.destination.complete();\n        }\n    }\n}\nfunction defaultErrorFactory() {\n    return new EmptyError();\n}\n//# sourceMappingURL=throwIfEmpty.js.map"]},"metadata":{},"sourceType":"module"}