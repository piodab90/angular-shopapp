{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function sampleTime(period, scheduler = async) {\n  return source => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator {\n  constructor(period, scheduler) {\n    this.period = period;\n    this.scheduler = scheduler;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n\n}\n\nclass SampleTimeSubscriber extends Subscriber {\n  constructor(destination, period, scheduler) {\n    super(destination);\n    this.period = period;\n    this.scheduler = scheduler;\n    this.hasValue = false;\n    this.add(scheduler.schedule(dispatchNotification, period, {\n      subscriber: this,\n      period\n    }));\n  }\n\n  _next(value) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n\n}\n\nfunction dispatchNotification(state) {\n  let {\n    subscriber,\n    period\n  } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}","map":{"version":3,"sources":["../../../src/internal/operators/sampleTime.ts"],"names":[],"mappings":"AAEA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,KAAT,QAAsB,oBAAtB;AA6CA,OAAM,SAAU,UAAV,CAAwB,MAAxB,EAAwC,SAAA,GAA2B,KAAnE,EAAwE;AAC5E,SAAQ,MAAD,IAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,kBAAJ,CAAuB,MAAvB,EAA+B,SAA/B,CAAZ,CAAlC;AACD;;AAED,MAAM,kBAAN,CAAwB;AACtB,EAAA,WAAA,CAAoB,MAApB,EACoB,SADpB,EAC4C;AADxB,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,SAAA,GAAA,SAAA;AACnB;;AAED,EAAA,IAAI,CAAC,UAAD,EAA4B,MAA5B,EAAuC;AACzC,WAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,oBAAJ,CAAyB,UAAzB,EAAqC,KAAK,MAA1C,EAAkD,KAAK,SAAvD,CAAjB,CAAP;AACD;;AAPqB;;AAexB,MAAM,oBAAN,SAAsC,UAAtC,CAAmD;AAIjD,EAAA,WAAA,CAAY,WAAZ,EACoB,MADpB,EAEoB,SAFpB,EAE4C;AAC1C,UAAM,WAAN;AAFkB,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,SAAA,GAAA,SAAA;AAJpB,SAAA,QAAA,GAAoB,KAApB;AAME,SAAK,GAAL,CAAS,SAAS,CAAC,QAAV,CAAmB,oBAAnB,EAAyC,MAAzC,EAAiD;AAAE,MAAA,UAAU,EAAE,IAAd;AAAoB,MAAA;AAApB,KAAjD,CAAT;AACD;;AAES,EAAA,KAAK,CAAC,KAAD,EAAS;AACtB,SAAK,SAAL,GAAiB,KAAjB;AACA,SAAK,QAAL,GAAgB,IAAhB;AACD;;AAED,EAAA,UAAU,GAAA;AACR,QAAI,KAAK,QAAT,EAAmB;AACjB,WAAK,QAAL,GAAgB,KAAhB;AACA,WAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,SAA3B;AACD;AACF;;AArBgD;;AAwBnD,SAAS,oBAAT,CAA6D,KAA7D,EAAuE;AACrE,MAAI;AAAE,IAAA,UAAF;AAAc,IAAA;AAAd,MAAyB,KAA7B;AACA,EAAA,UAAU,CAAC,UAAX;AACA,OAAK,QAAL,CAAc,KAAd,EAAqB,MAArB;AACD","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function sampleTime(period, scheduler = async) {\n    return (source) => source.lift(new SampleTimeOperator(period, scheduler));\n}\nclass SampleTimeOperator {\n    constructor(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    }\n}\nclass SampleTimeSubscriber extends Subscriber {\n    constructor(destination, period, scheduler) {\n        super(destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n    }\n    _next(value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    }\n    notifyNext() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    }\n}\nfunction dispatchNotification(state) {\n    let { subscriber, period } = state;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map"]},"metadata":{},"sourceType":"module"}