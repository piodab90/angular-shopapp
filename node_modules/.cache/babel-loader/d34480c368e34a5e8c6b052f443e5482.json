{"ast":null,"code":"import { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function skipUntil(notifier) {\n  return source => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator {\n  constructor(notifier) {\n    this.notifier = notifier;\n  }\n\n  call(destination, source) {\n    return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n  }\n\n}\n\nclass SkipUntilSubscriber extends OuterSubscriber {\n  constructor(destination, notifier) {\n    super(destination);\n    this.hasValue = false;\n    const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n    this.add(innerSubscriber);\n    this.innerSubscription = innerSubscriber;\n    const innerSubscription = subscribeToResult(this, notifier, undefined, undefined, innerSubscriber);\n\n    if (innerSubscription !== innerSubscriber) {\n      this.add(innerSubscription);\n      this.innerSubscription = innerSubscription;\n    }\n  }\n\n  _next(value) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.hasValue = true;\n\n    if (this.innerSubscription) {\n      this.innerSubscription.unsubscribe();\n    }\n  }\n\n  notifyComplete() {}\n\n}","map":{"version":3,"sources":["../../../src/internal/operators/skipUntil.ts"],"names":[],"mappings":"AAGA,SAAS,eAAT,QAAgC,oBAAhC;AACA,SAAS,eAAT,QAAgC,oBAAhC;AACA,SAAS,iBAAT,QAAkC,2BAAlC;AA2CA,OAAM,SAAU,SAAV,CAAuB,QAAvB,EAAgD;AACpD,SAAQ,MAAD,IAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,iBAAJ,CAAsB,QAAtB,CAAZ,CAAlC;AACD;;AAED,MAAM,iBAAN,CAAuB;AACrB,EAAA,WAAA,CAAoB,QAApB,EAA6C;AAAzB,SAAA,QAAA,GAAA,QAAA;AACnB;;AAED,EAAA,IAAI,CAAC,WAAD,EAA6B,MAA7B,EAAwC;AAC1C,WAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,mBAAJ,CAAwB,WAAxB,EAAqC,KAAK,QAA1C,CAAjB,CAAP;AACD;;AANoB;;AAcvB,MAAM,mBAAN,SAAwC,eAAxC,CAA6D;AAK3D,EAAA,WAAA,CAAY,WAAZ,EAAwC,QAAxC,EAAsE;AACpE,UAAM,WAAN;AAJM,SAAA,QAAA,GAAoB,KAApB;AAKN,UAAM,eAAe,GAAG,IAAI,eAAJ,CAAoB,IAApB,EAA0B,SAA1B,EAAqC,SAArC,CAAxB;AACA,SAAK,GAAL,CAAS,eAAT;AACA,SAAK,iBAAL,GAAyB,eAAzB;AACA,UAAM,iBAAiB,GAAG,iBAAiB,CAAC,IAAD,EAAO,QAAP,EAAiB,SAAjB,EAA4B,SAA5B,EAAuC,eAAvC,CAA3C;;AAIA,QAAI,iBAAiB,KAAK,eAA1B,EAA2C;AACzC,WAAK,GAAL,CAAS,iBAAT;AACA,WAAK,iBAAL,GAAyB,iBAAzB;AACD;AACF;;AAES,EAAA,KAAK,CAAC,KAAD,EAAS;AACtB,QAAI,KAAK,QAAT,EAAmB;AACjB,YAAM,KAAN,CAAY,KAAZ;AACD;AACF;;AAED,EAAA,UAAU,CAAC,UAAD,EAAgB,UAAhB,EACC,UADD,EACqB,UADrB,EAEC,QAFD,EAEgC;AACxC,SAAK,QAAL,GAAgB,IAAhB;;AACA,QAAI,KAAK,iBAAT,EAA4B;AAC1B,WAAK,iBAAL,CAAuB,WAAvB;AACD;AACF;;AAED,EAAA,cAAc,GAAA,CAEb;;AArC0D","sourcesContent":["import { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function skipUntil(notifier) {\n    return (source) => source.lift(new SkipUntilOperator(notifier));\n}\nclass SkipUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(destination, source) {\n        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n    }\n}\nclass SkipUntilSubscriber extends OuterSubscriber {\n    constructor(destination, notifier) {\n        super(destination);\n        this.hasValue = false;\n        const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        this.add(innerSubscriber);\n        this.innerSubscription = innerSubscriber;\n        const innerSubscription = subscribeToResult(this, notifier, undefined, undefined, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            this.add(innerSubscription);\n            this.innerSubscription = innerSubscription;\n        }\n    }\n    _next(value) {\n        if (this.hasValue) {\n            super._next(value);\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n        if (this.innerSubscription) {\n            this.innerSubscription.unsubscribe();\n        }\n    }\n    notifyComplete() {\n    }\n}\n//# sourceMappingURL=skipUntil.js.map"]},"metadata":{},"sourceType":"module"}