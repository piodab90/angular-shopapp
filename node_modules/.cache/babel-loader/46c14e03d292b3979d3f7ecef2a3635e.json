{"ast":null,"code":"import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function window(windowBoundaries) {\n  return function windowOperatorFunction(source) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator {\n  constructor(windowBoundaries) {\n    this.windowBoundaries = windowBoundaries;\n  }\n\n  call(subscriber, source) {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n\n    return sourceSubscription;\n  }\n\n}\n\nclass WindowSubscriber extends OuterSubscriber {\n  constructor(destination) {\n    super(destination);\n    this.window = new Subject();\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.openWindow();\n  }\n\n  notifyError(error, innerSub) {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub) {\n    this._complete();\n  }\n\n  _next(value) {\n    this.window.next(value);\n  }\n\n  _error(err) {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  _complete() {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  _unsubscribe() {\n    this.window = null;\n  }\n\n  openWindow() {\n    const prevWindow = this.window;\n\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const destination = this.destination;\n    const newWindow = this.window = new Subject();\n    destination.next(newWindow);\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/operators/window.ts"],"names":[],"mappings":"AAEA,SAAS,OAAT,QAAwB,YAAxB;AAEA,SAAS,eAAT,QAAgC,oBAAhC;AAEA,SAAS,iBAAT,QAAkC,2BAAlC;AA8CA,OAAM,SAAU,MAAV,CAAoB,gBAApB,EAAqD;AACzD,SAAO,SAAS,sBAAT,CAAgC,MAAhC,EAAqD;AAC1D,WAAO,MAAM,CAAC,IAAP,CAAY,IAAI,cAAJ,CAAmB,gBAAnB,CAAZ,CAAP;AACD,GAFD;AAGD;;AAED,MAAM,cAAN,CAAoB;AAElB,EAAA,WAAA,CAAoB,gBAApB,EAAqD;AAAjC,SAAA,gBAAA,GAAA,gBAAA;AACnB;;AAED,EAAA,IAAI,CAAC,UAAD,EAAwC,MAAxC,EAAmD;AACrD,UAAM,gBAAgB,GAAG,IAAI,gBAAJ,CAAqB,UAArB,CAAzB;AACA,UAAM,kBAAkB,GAAG,MAAM,CAAC,SAAP,CAAiB,gBAAjB,CAA3B;;AACA,QAAI,CAAC,kBAAkB,CAAC,MAAxB,EAAgC;AAC9B,MAAA,gBAAgB,CAAC,GAAjB,CAAqB,iBAAiB,CAAC,gBAAD,EAAmB,KAAK,gBAAxB,CAAtC;AACD;;AACD,WAAO,kBAAP;AACD;;AAZiB;;AAoBpB,MAAM,gBAAN,SAAkC,eAAlC,CAAyD;AAIvD,EAAA,WAAA,CAAY,WAAZ,EAAkD;AAChD,UAAM,WAAN;AAHM,SAAA,MAAA,GAAqB,IAAI,OAAJ,EAArB;AAIN,IAAA,WAAW,CAAC,IAAZ,CAAiB,KAAK,MAAtB;AACD;;AAED,EAAA,UAAU,CAAC,UAAD,EAAgB,UAAhB,EACC,UADD,EACqB,UADrB,EAEC,QAFD,EAEkC;AAC1C,SAAK,UAAL;AACD;;AAED,EAAA,WAAW,CAAC,KAAD,EAAa,QAAb,EAA8C;AACvD,SAAK,MAAL,CAAY,KAAZ;AACD;;AAED,EAAA,cAAc,CAAC,QAAD,EAAkC;AAC9C,SAAK,SAAL;AACD;;AAES,EAAA,KAAK,CAAC,KAAD,EAAS;AACtB,SAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB;AACD;;AAES,EAAA,MAAM,CAAC,GAAD,EAAS;AACvB,SAAK,MAAL,CAAY,KAAZ,CAAkB,GAAlB;AACA,SAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACD;;AAES,EAAA,SAAS,GAAA;AACjB,SAAK,MAAL,CAAY,QAAZ;AACA,SAAK,WAAL,CAAiB,QAAjB;AACD;;AAGD,EAAA,YAAY,GAAA;AACV,SAAK,MAAL,GAAc,IAAd;AACD;;AAEO,EAAA,UAAU,GAAA;AAChB,UAAM,UAAU,GAAG,KAAK,MAAxB;;AACA,QAAI,UAAJ,EAAgB;AACd,MAAA,UAAU,CAAC,QAAX;AACD;;AACD,UAAM,WAAW,GAAG,KAAK,WAAzB;AACA,UAAM,SAAS,GAAG,KAAK,MAAL,GAAc,IAAI,OAAJ,EAAhC;AACA,IAAA,WAAW,CAAC,IAAZ,CAAiB,SAAjB;AACD;;AAlDsD","sourcesContent":["import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nclass WindowOperator {\n    constructor(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    call(subscriber, source) {\n        const windowSubscriber = new WindowSubscriber(subscriber);\n        const sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    }\n}\nclass WindowSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.window = new Subject();\n        destination.next(this.window);\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        this._complete();\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n    }\n    _unsubscribe() {\n        this.window = null;\n    }\n    openWindow() {\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const destination = this.destination;\n        const newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    }\n}\n//# sourceMappingURL=window.js.map"]},"metadata":{},"sourceType":"module"}