{"ast":null,"code":"import { hostReportError } from './hostReportError';\nexport const subscribeToPromise = promise => subscriber => {\n  promise.then(value => {\n    if (!subscriber.closed) {\n      subscriber.next(value);\n      subscriber.complete();\n    }\n  }, err => subscriber.error(err)).then(null, hostReportError);\n  return subscriber;\n};","map":{"version":3,"sources":["../../../src/internal/util/subscribeToPromise.ts"],"names":[],"mappings":"AACA,SAAS,eAAT,QAAgC,mBAAhC;AAEA,OAAO,MAAM,kBAAkB,GAAO,OAAJ,IAAiC,UAAD,IAA8B;AAC9F,EAAA,OAAO,CAAC,IAAR,CACG,KAAD,IAAU;AACR,QAAI,CAAC,UAAU,CAAC,MAAhB,EAAwB;AACtB,MAAA,UAAU,CAAC,IAAX,CAAgB,KAAhB;AACA,MAAA,UAAU,CAAC,QAAX;AACD;AACF,GANH,EAOG,GAAD,IAAc,UAAU,CAAC,KAAX,CAAiB,GAAjB,CAPhB,EASC,IATD,CASM,IATN,EASY,eATZ;AAUA,SAAO,UAAP;AACD,CAZM","sourcesContent":["import { hostReportError } from './hostReportError';\nexport const subscribeToPromise = (promise) => (subscriber) => {\n    promise.then((value) => {\n        if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n        }\n    }, (err) => subscriber.error(err))\n        .then(null, hostReportError);\n    return subscriber;\n};\n//# sourceMappingURL=subscribeToPromise.js.map"]},"metadata":{},"sourceType":"module"}