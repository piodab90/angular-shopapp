{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nexport function skipLast(count) {\n  return source => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator {\n  constructor(_skipCount) {\n    this._skipCount = _skipCount;\n\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError();\n    }\n  }\n\n  call(subscriber, source) {\n    if (this._skipCount === 0) {\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n\n}\n\nclass SkipLastSubscriber extends Subscriber {\n  constructor(destination, _skipCount) {\n    super(destination);\n    this._skipCount = _skipCount;\n    this._count = 0;\n    this._ring = new Array(_skipCount);\n  }\n\n  _next(value) {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/operators/skipLast.ts"],"names":[],"mappings":"AACA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,uBAAT,QAAwC,iCAAxC;AA0CA,OAAM,SAAU,QAAV,CAAsB,KAAtB,EAAmC;AACvC,SAAQ,MAAD,IAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,gBAAJ,CAAqB,KAArB,CAAZ,CAAlC;AACD;;AAED,MAAM,gBAAN,CAAsB;AACpB,EAAA,WAAA,CAAoB,UAApB,EAAsC;AAAlB,SAAA,UAAA,GAAA,UAAA;;AAClB,QAAI,KAAK,UAAL,GAAkB,CAAtB,EAAyB;AACvB,YAAM,IAAI,uBAAJ,EAAN;AACD;AACF;;AAED,EAAA,IAAI,CAAC,UAAD,EAA4B,MAA5B,EAAuC;AACzC,QAAI,KAAK,UAAL,KAAoB,CAAxB,EAA2B;AAGzB,aAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,UAAJ,CAAe,UAAf,CAAjB,CAAP;AACD,KAJD,MAIO;AACL,aAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,KAAK,UAAxC,CAAjB,CAAP;AACD;AACF;;AAfmB;;AAuBtB,MAAM,kBAAN,SAAoC,UAApC,CAAiD;AAI/C,EAAA,WAAA,CAAY,WAAZ,EAAgD,UAAhD,EAAkE;AAChE,UAAM,WAAN;AAD8C,SAAA,UAAA,GAAA,UAAA;AAFxC,SAAA,MAAA,GAAiB,CAAjB;AAIN,SAAK,KAAL,GAAa,IAAI,KAAJ,CAAa,UAAb,CAAb;AACD;;AAES,EAAA,KAAK,CAAC,KAAD,EAAS;AACtB,UAAM,SAAS,GAAG,KAAK,UAAvB;AACA,UAAM,KAAK,GAAG,KAAK,MAAL,EAAd;;AAEA,QAAI,KAAK,GAAG,SAAZ,EAAuB;AACrB,WAAK,KAAL,CAAW,KAAX,IAAoB,KAApB;AACD,KAFD,MAEO;AACL,YAAM,YAAY,GAAG,KAAK,GAAG,SAA7B;AACA,YAAM,IAAI,GAAG,KAAK,KAAlB;AACA,YAAM,QAAQ,GAAG,IAAI,CAAC,YAAD,CAArB;AAEA,MAAA,IAAI,CAAC,YAAD,CAAJ,GAAqB,KAArB;AACA,WAAK,WAAL,CAAiB,IAAjB,CAAsB,QAAtB;AACD;AACF;;AAvB8C","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nexport function skipLast(count) {\n    return (source) => source.lift(new SkipLastOperator(count));\n}\nclass SkipLastOperator {\n    constructor(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    call(subscriber, source) {\n        if (this._skipCount === 0) {\n            return source.subscribe(new Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    }\n}\nclass SkipLastSubscriber extends Subscriber {\n    constructor(destination, _skipCount) {\n        super(destination);\n        this._skipCount = _skipCount;\n        this._count = 0;\n        this._ring = new Array(_skipCount);\n    }\n    _next(value) {\n        const skipCount = this._skipCount;\n        const count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            const currentIndex = count % skipCount;\n            const ring = this._ring;\n            const oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    }\n}\n//# sourceMappingURL=skipLast.js.map"]},"metadata":{},"sourceType":"module"}