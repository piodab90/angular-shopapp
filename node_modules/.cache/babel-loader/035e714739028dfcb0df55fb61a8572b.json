{"ast":null,"code":"import { AsyncAction } from './AsyncAction';\nexport class QueueAction extends AsyncAction {\n  constructor(scheduler, work) {\n    super(scheduler, work);\n    this.scheduler = scheduler;\n    this.work = work;\n  }\n\n  schedule(state, delay = 0) {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  execute(state, delay) {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  requestAsyncId(scheduler, id, delay = 0) {\n    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    return scheduler.flush(this);\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/scheduler/QueueAction.ts"],"names":[],"mappings":"AAAA,SAAS,WAAT,QAA4B,eAA5B;AAUA,OAAM,MAAO,WAAP,SAA8B,WAA9B,CAA4C;AAEhD,EAAA,WAAA,CAAsB,SAAtB,EACsB,IADtB,EACyE;AACvE,UAAM,SAAN,EAAiB,IAAjB;AAFoB,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,IAAA,GAAA,IAAA;AAErB;;AAEM,EAAA,QAAQ,CAAC,KAAD,EAAY,KAAA,GAAgB,CAA5B,EAA6B;AAC1C,QAAI,KAAK,GAAG,CAAZ,EAAe;AACb,aAAO,MAAM,QAAN,CAAe,KAAf,EAAsB,KAAtB,CAAP;AACD;;AACD,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,SAAL,CAAe,KAAf,CAAqB,IAArB;AACA,WAAO,IAAP;AACD;;AAEM,EAAA,OAAO,CAAC,KAAD,EAAW,KAAX,EAAwB;AACpC,WAAQ,KAAK,GAAG,CAAR,IAAa,KAAK,MAAnB,GACL,MAAM,OAAN,CAAc,KAAd,EAAqB,KAArB,CADK,GAEL,KAAK,QAAL,CAAc,KAAd,EAAqB,KAArB,CAFF;AAGD;;AAES,EAAA,cAAc,CAAC,SAAD,EAA4B,EAA5B,EAAsC,KAAA,GAAgB,CAAtD,EAAuD;AAI7E,QAAK,KAAK,KAAK,IAAV,IAAkB,KAAK,GAAG,CAA3B,IAAkC,KAAK,KAAK,IAAV,IAAkB,KAAK,KAAL,GAAa,CAArE,EAAyE;AACvE,aAAO,MAAM,cAAN,CAAqB,SAArB,EAAgC,EAAhC,EAAoC,KAApC,CAAP;AACD;;AAED,WAAO,SAAS,CAAC,KAAV,CAAgB,IAAhB,CAAP;AACD;;AAhC+C","sourcesContent":["import { AsyncAction } from './AsyncAction';\nexport class QueueAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    schedule(state, delay = 0) {\n        if (delay > 0) {\n            return super.schedule(state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    }\n    execute(state, delay) {\n        return (delay > 0 || this.closed) ?\n            super.execute(state, delay) :\n            this._execute(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    }\n}\n//# sourceMappingURL=QueueAction.js.map"]},"metadata":{},"sourceType":"module"}