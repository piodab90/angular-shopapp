{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n  return source => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator {\n  constructor(duration, scheduler, leading, trailing) {\n    this.duration = duration;\n    this.scheduler = scheduler;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n  }\n\n}\n\nclass ThrottleTimeSubscriber extends Subscriber {\n  constructor(destination, duration, scheduler, leading, trailing) {\n    super(destination);\n    this.duration = duration;\n    this.scheduler = scheduler;\n    this.leading = leading;\n    this.trailing = trailing;\n    this._hasTrailingValue = false;\n    this._trailingValue = null;\n  }\n\n  _next(value) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, {\n        subscriber: this\n      }));\n\n      if (this.leading) {\n        this.destination.next(value);\n      } else if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    }\n  }\n\n  _complete() {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n\n}\n\nfunction dispatchNext(arg) {\n  const {\n    subscriber\n  } = arg;\n  subscriber.clearThrottle();\n}","map":{"version":3,"sources":["../../../src/internal/operators/throttleTime.ts"],"names":[],"mappings":"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","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map"]},"metadata":{},"sourceType":"module"}