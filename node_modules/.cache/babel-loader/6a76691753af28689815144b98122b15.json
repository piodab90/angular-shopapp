{"ast":null,"code":"import { isArray } from '../util/isArray';\nimport { race as raceStatic } from '../observable/race';\nexport function race(...observables) {\n  return function raceOperatorFunction(source) {\n    if (observables.length === 1 && isArray(observables[0])) {\n      observables = observables[0];\n    }\n\n    return source.lift.call(raceStatic(source, ...observables));\n  };\n}","map":{"version":3,"sources":["../../../src/internal/operators/race.ts"],"names":[],"mappings":"AACA,SAAS,OAAT,QAAwB,iBAAxB;AAEA,SAAS,IAAI,IAAI,UAAjB,QAAmC,oBAAnC;AAsBA,OAAM,SAAU,IAAV,CAAkB,GAAG,WAArB,EAAqE;AACzE,SAAO,SAAS,oBAAT,CAA8B,MAA9B,EAAmD;AAGxD,QAAI,WAAW,CAAC,MAAZ,KAAuB,CAAvB,IAA4B,OAAO,CAAC,WAAW,CAAC,CAAD,CAAZ,CAAvC,EAAyD;AACvD,MAAA,WAAW,GAAG,WAAW,CAAC,CAAD,CAAzB;AACD;;AAED,WAAO,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAiB,UAAU,CAAC,MAAD,EAAS,GAAI,WAAb,CAA3B,CAAP;AACD,GARD;AASD","sourcesContent":["import { isArray } from '../util/isArray';\nimport { race as raceStatic } from '../observable/race';\nexport function race(...observables) {\n    return function raceOperatorFunction(source) {\n        if (observables.length === 1 && isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(raceStatic(source, ...observables));\n    };\n}\n//# sourceMappingURL=race.js.map"]},"metadata":{},"sourceType":"module"}