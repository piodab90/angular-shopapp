{"ast":null,"code":"import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function debounce(durationSelector) {\n  return source => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator {\n  constructor(durationSelector) {\n    this.durationSelector = durationSelector;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n\n}\n\nclass DebounceSubscriber extends OuterSubscriber {\n  constructor(destination, durationSelector) {\n    super(destination);\n    this.durationSelector = durationSelector;\n    this.hasValue = false;\n    this.durationSubscription = null;\n  }\n\n  _next(value) {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  _complete() {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  _tryNext(value, duration) {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n\n    if (subscription && !subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.emitValue();\n  }\n\n  notifyComplete() {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n\n      this.value = null;\n      this.hasValue = false;\n\n      super._next(value);\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/operators/debounce.ts"],"names":[],"mappings":"AAMA,SAAS,eAAT,QAAgC,oBAAhC;AAEA,SAAS,iBAAT,QAAkC,2BAAlC;AAkDA,OAAM,SAAU,QAAV,CAAsB,gBAAtB,EAAgF;AACpF,SAAQ,MAAD,IAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,gBAAJ,CAAqB,gBAArB,CAAZ,CAAlC;AACD;;AAED,MAAM,gBAAN,CAAsB;AACpB,EAAA,WAAA,CAAoB,gBAApB,EAA8E;AAA1D,SAAA,gBAAA,GAAA,gBAAA;AACnB;;AAED,EAAA,IAAI,CAAC,UAAD,EAA4B,MAA5B,EAAuC;AACzC,WAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,kBAAJ,CAAuB,UAAvB,EAAmC,KAAK,gBAAxC,CAAjB,CAAP;AACD;;AANmB;;AActB,MAAM,kBAAN,SAAuC,eAAvC,CAA4D;AAK1D,EAAA,WAAA,CAAY,WAAZ,EACoB,gBADpB,EAC8E;AAC5E,UAAM,WAAN;AADkB,SAAA,gBAAA,GAAA,gBAAA;AAJZ,SAAA,QAAA,GAAoB,KAApB;AACA,SAAA,oBAAA,GAAqC,IAArC;AAKP;;AAES,EAAA,KAAK,CAAC,KAAD,EAAS;AACtB,QAAI;AACF,YAAM,MAAM,GAAG,KAAK,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B,EAAiC,KAAjC,CAAf;;AAEA,UAAI,MAAJ,EAAY;AACV,aAAK,QAAL,CAAc,KAAd,EAAqB,MAArB;AACD;AACF,KAND,CAME,OAAO,GAAP,EAAY;AACZ,WAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACD;AACF;;AAES,EAAA,SAAS,GAAA;AACjB,SAAK,SAAL;AACA,SAAK,WAAL,CAAiB,QAAjB;AACD;;AAEO,EAAA,QAAQ,CAAC,KAAD,EAAW,QAAX,EAA+C;AAC7D,QAAI,YAAY,GAAG,KAAK,oBAAxB;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,QAAL,GAAgB,IAAhB;;AACA,QAAI,YAAJ,EAAkB;AAChB,MAAA,YAAY,CAAC,WAAb;AACA,WAAK,MAAL,CAAY,YAAZ;AACD;;AAED,IAAA,YAAY,GAAG,iBAAiB,CAAC,IAAD,EAAO,QAAP,CAAhC;;AACA,QAAI,YAAY,IAAI,CAAC,YAAY,CAAC,MAAlC,EAA0C;AACxC,WAAK,GAAL,CAAS,KAAK,oBAAL,GAA4B,YAArC;AACD;AACF;;AAED,EAAA,UAAU,CAAC,UAAD,EAAgB,UAAhB,EACC,UADD,EACqB,UADrB,EAEC,QAFD,EAEgC;AACxC,SAAK,SAAL;AACD;;AAED,EAAA,cAAc,GAAA;AACZ,SAAK,SAAL;AACD;;AAED,EAAA,SAAS,GAAA;AACP,QAAI,KAAK,QAAT,EAAmB;AACjB,YAAM,KAAK,GAAG,KAAK,KAAnB;AACA,YAAM,YAAY,GAAG,KAAK,oBAA1B;;AACA,UAAI,YAAJ,EAAkB;AAChB,aAAK,oBAAL,GAA4B,IAA5B;AACA,QAAA,YAAY,CAAC,WAAb;AACA,aAAK,MAAL,CAAY,YAAZ;AACD;;AAMD,WAAK,KAAL,GAAa,IAAb;AACA,WAAK,QAAL,GAAgB,KAAhB;;AACA,YAAM,KAAN,CAAY,KAAZ;AACD;AACF;;AAtEyD","sourcesContent":["import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function debounce(durationSelector) {\n    return (source) => source.lift(new DebounceOperator(durationSelector));\n}\nclass DebounceOperator {\n    constructor(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    }\n}\nclass DebounceSubscriber extends OuterSubscriber {\n    constructor(destination, durationSelector) {\n        super(destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n        this.durationSubscription = null;\n    }\n    _next(value) {\n        try {\n            const result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.emitValue();\n        this.destination.complete();\n    }\n    _tryNext(value, duration) {\n        let subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult(this, duration);\n        if (subscription && !subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    }\n    notifyComplete() {\n        this.emitValue();\n    }\n    emitValue() {\n        if (this.hasValue) {\n            const value = this.value;\n            const subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            super._next(value);\n        }\n    }\n}\n//# sourceMappingURL=debounce.js.map"]},"metadata":{},"sourceType":"module"}