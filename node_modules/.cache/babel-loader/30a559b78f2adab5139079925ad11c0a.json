{"ast":null,"code":"import { async } from '../scheduler/async';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\nexport function timeInterval(scheduler = async) {\n  return source => defer(() => {\n    return source.pipe(scan(({\n      current\n    }, value) => ({\n      value,\n      current: scheduler.now(),\n      last: current\n    }), {\n      current: scheduler.now(),\n      value: undefined,\n      last: undefined\n    }), map(({\n      current,\n      last,\n      value\n    }) => new TimeInterval(value, current - last)));\n  });\n}\nexport class TimeInterval {\n  constructor(value, interval) {\n    this.value = value;\n    this.interval = interval;\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/operators/timeInterval.ts"],"names":[],"mappings":"AAEA,SAAS,KAAT,QAAsB,oBAAtB;AAEA,SAAS,IAAT,QAAqB,QAArB;AACA,SAAS,KAAT,QAAsB,qBAAtB;AACA,SAAS,GAAT,QAAoB,OAApB;AA+CA,OAAM,SAAU,YAAV,CAA0B,SAAA,GAA2B,KAArD,EAA0D;AAC9D,SAAQ,MAAD,IAA2B,KAAK,CAAC,MAAK;AAC3C,WAAO,MAAM,CAAC,IAAP,CAEL,IAAI,CACF,CAAC;AAAE,MAAA;AAAF,KAAD,EAAc,KAAd,MAAyB;AAAE,MAAA,KAAF;AAAS,MAAA,OAAO,EAAE,SAAS,CAAC,GAAV,EAAlB;AAAmC,MAAA,IAAI,EAAE;AAAzC,KAAzB,CADE,EAEF;AAAE,MAAA,OAAO,EAAE,SAAS,CAAC,GAAV,EAAX;AAA4B,MAAA,KAAK,EAAE,SAAnC;AAA+C,MAAA,IAAI,EAAE;AAArD,KAFE,CAFC,EAML,GAAG,CAAuB,CAAC;AAAE,MAAA,OAAF;AAAW,MAAA,IAAX;AAAiB,MAAA;AAAjB,KAAD,KAA8B,IAAI,YAAJ,CAAiB,KAAjB,EAAwB,OAAO,GAAG,IAAlC,CAArD,CANE,CAAP;AAQD,GATsC,CAAvC;AAUD;AAQD,OAAM,MAAO,YAAP,CAAmB;AACvB,EAAA,WAAA,CAAmB,KAAnB,EAAoC,QAApC,EAAoD;AAAjC,SAAA,KAAA,GAAA,KAAA;AAAiB,SAAA,QAAA,GAAA,QAAA;AAAoB;;AADjC","sourcesContent":["import { async } from '../scheduler/async';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\nexport function timeInterval(scheduler = async) {\n    return (source) => defer(() => {\n        return source.pipe(scan(({ current }, value) => ({ value, current: scheduler.now(), last: current }), { current: scheduler.now(), value: undefined, last: undefined }), map(({ current, last, value }) => new TimeInterval(value, current - last)));\n    });\n}\nexport class TimeInterval {\n    constructor(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n}\n//# sourceMappingURL=timeInterval.js.map"]},"metadata":{},"sourceType":"module"}