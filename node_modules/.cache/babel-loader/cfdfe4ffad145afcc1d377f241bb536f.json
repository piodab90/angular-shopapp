{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n  return source => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator {\n  constructor(dueTime, scheduler) {\n    this.dueTime = dueTime;\n    this.scheduler = scheduler;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n\n}\n\nclass DebounceTimeSubscriber extends Subscriber {\n  constructor(destination, dueTime, scheduler) {\n    super(destination);\n    this.dueTime = dueTime;\n    this.scheduler = scheduler;\n    this.debouncedSubscription = null;\n    this.lastValue = null;\n    this.hasValue = false;\n  }\n\n  _next(value) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext() {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      const {\n        lastValue\n      } = this;\n      this.lastValue = null;\n      this.hasValue = false;\n      this.destination.next(lastValue);\n    }\n  }\n\n  clearDebounce() {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n\n}\n\nfunction dispatchNext(subscriber) {\n  subscriber.debouncedNext();\n}","map":{"version":3,"sources":["../../../src/internal/operators/debounceTime.ts"],"names":[],"mappings":"AAEA,SAAS,UAAT,QAA2B,eAA3B;AAEA,SAAS,KAAT,QAAsB,oBAAtB;AAuDA,OAAM,SAAU,YAAV,CAA0B,OAA1B,EAA2C,SAAA,GAA2B,KAAtE,EAA2E;AAC/E,SAAQ,MAAD,IAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,oBAAJ,CAAyB,OAAzB,EAAkC,SAAlC,CAAZ,CAAlC;AACD;;AAED,MAAM,oBAAN,CAA0B;AACxB,EAAA,WAAA,CAAoB,OAApB,EAA6C,SAA7C,EAAqE;AAAjD,SAAA,OAAA,GAAA,OAAA;AAAyB,SAAA,SAAA,GAAA,SAAA;AAC5C;;AAED,EAAA,IAAI,CAAC,UAAD,EAA4B,MAA5B,EAAuC;AACzC,WAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,sBAAJ,CAA2B,UAA3B,EAAuC,KAAK,OAA5C,EAAqD,KAAK,SAA1D,CAAjB,CAAP;AACD;;AANuB;;AAc1B,MAAM,sBAAN,SAAwC,UAAxC,CAAqD;AAKnD,EAAA,WAAA,CAAY,WAAZ,EACoB,OADpB,EAEoB,SAFpB,EAE4C;AAC1C,UAAM,WAAN;AAFkB,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,SAAA,GAAA,SAAA;AANZ,SAAA,qBAAA,GAAsC,IAAtC;AACA,SAAA,SAAA,GAAe,IAAf;AACA,SAAA,QAAA,GAAoB,KAApB;AAMP;;AAES,EAAA,KAAK,CAAC,KAAD,EAAS;AACtB,SAAK,aAAL;AACA,SAAK,SAAL,GAAiB,KAAjB;AACA,SAAK,QAAL,GAAgB,IAAhB;AACA,SAAK,GAAL,CAAS,KAAK,qBAAL,GAA6B,KAAK,SAAL,CAAe,QAAf,CAAwB,YAAxB,EAAsC,KAAK,OAA3C,EAAoD,IAApD,CAAtC;AACD;;AAES,EAAA,SAAS,GAAA;AACjB,SAAK,aAAL;AACA,SAAK,WAAL,CAAiB,QAAjB;AACD;;AAED,EAAA,aAAa,GAAA;AACX,SAAK,aAAL;;AAEA,QAAI,KAAK,QAAT,EAAmB;AACjB,YAAM;AAAE,QAAA;AAAF,UAAgB,IAAtB;AAMA,WAAK,SAAL,GAAiB,IAAjB;AACA,WAAK,QAAL,GAAgB,KAAhB;AACA,WAAK,WAAL,CAAiB,IAAjB,CAAsB,SAAtB;AACD;AACF;;AAEO,EAAA,aAAa,GAAA;AACnB,UAAM,qBAAqB,GAAG,KAAK,qBAAnC;;AAEA,QAAI,qBAAqB,KAAK,IAA9B,EAAoC;AAClC,WAAK,MAAL,CAAY,qBAAZ;AACA,MAAA,qBAAqB,CAAC,WAAtB;AACA,WAAK,qBAAL,GAA6B,IAA7B;AACD;AACF;;AA/CkD;;AAkDrD,SAAS,YAAT,CAAsB,UAAtB,EAA6D;AAC3D,EAAA,UAAU,CAAC,aAAX;AACD","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map"]},"metadata":{},"sourceType":"module"}