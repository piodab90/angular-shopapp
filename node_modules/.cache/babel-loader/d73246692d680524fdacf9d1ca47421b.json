{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n  return source => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator {\n  constructor(predicate) {\n    this.predicate = predicate;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n\n}\n\nclass SkipWhileSubscriber extends Subscriber {\n  constructor(destination, predicate) {\n    super(destination);\n    this.predicate = predicate;\n    this.skipping = true;\n    this.index = 0;\n  }\n\n  _next(value) {\n    const destination = this.destination;\n\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  tryCallPredicate(value) {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../src/internal/operators/skipWhile.ts"],"names":[],"mappings":"AAEA,SAAS,UAAT,QAA2B,eAA3B;AAeA,OAAM,SAAU,SAAV,CAAuB,SAAvB,EAAsE;AAC1E,SAAQ,MAAD,IAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,iBAAJ,CAAsB,SAAtB,CAAZ,CAAlC;AACD;;AAED,MAAM,iBAAN,CAAuB;AACrB,EAAA,WAAA,CAAoB,SAApB,EAAmE;AAA/C,SAAA,SAAA,GAAA,SAAA;AACnB;;AAED,EAAA,IAAI,CAAC,UAAD,EAA4B,MAA5B,EAAuC;AACzC,WAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,mBAAJ,CAAwB,UAAxB,EAAoC,KAAK,SAAzC,CAAjB,CAAP;AACD;;AANoB;;AAcvB,MAAM,mBAAN,SAAqC,UAArC,CAAkD;AAIhD,EAAA,WAAA,CAAY,WAAZ,EACoB,SADpB,EACmE;AACjE,UAAM,WAAN;AADkB,SAAA,SAAA,GAAA,SAAA;AAJZ,SAAA,QAAA,GAAoB,IAApB;AACA,SAAA,KAAA,GAAgB,CAAhB;AAKP;;AAES,EAAA,KAAK,CAAC,KAAD,EAAS;AACtB,UAAM,WAAW,GAAG,KAAK,WAAzB;;AACA,QAAI,KAAK,QAAT,EAAmB;AACjB,WAAK,gBAAL,CAAsB,KAAtB;AACD;;AAED,QAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,MAAA,WAAW,CAAC,IAAZ,CAAiB,KAAjB;AACD;AACF;;AAEO,EAAA,gBAAgB,CAAC,KAAD,EAAS;AAC/B,QAAI;AACF,YAAM,MAAM,GAAG,KAAK,SAAL,CAAe,KAAf,EAAsB,KAAK,KAAL,EAAtB,CAAf;AACA,WAAK,QAAL,GAAgB,OAAO,CAAC,MAAD,CAAvB;AACD,KAHD,CAGE,OAAO,GAAP,EAAY;AACZ,WAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACD;AACF;;AA3B+C","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n    return (source) => source.lift(new SkipWhileOperator(predicate));\n}\nclass SkipWhileOperator {\n    constructor(predicate) {\n        this.predicate = predicate;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    }\n}\nclass SkipWhileSubscriber extends Subscriber {\n    constructor(destination, predicate) {\n        super(destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    }\n    tryCallPredicate(value) {\n        try {\n            const result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n}\n//# sourceMappingURL=skipWhile.js.map"]},"metadata":{},"sourceType":"module"}